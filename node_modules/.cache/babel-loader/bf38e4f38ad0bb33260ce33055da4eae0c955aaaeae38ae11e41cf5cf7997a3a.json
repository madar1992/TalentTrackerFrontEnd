{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TalentTrackerFrontEnd\\\\src\\\\components\\\\JobDescription.js\",\n  _s = $RefreshSig$();\n// JobDescription.js\nimport React from 'react';\nimport Sidebar from './Sidebar';\nimport { useParams } from 'react-router-dom';\nimport '../css/JobDescription.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDescription = ({\n  jobs\n}) => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the ID from the URL parameter\n  // Find the job object based on the ID\n  const job = jobs.find(job => job.id === parseInt(id));\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Job not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this); // Handle case when job is not found\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-description-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-button\",\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Company: \", job.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", job.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Job Type: \", job.jobType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Salary: \", job.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Experience: \", job.experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDescription, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = JobDescription;\nexport default JobDescription;\nvar _c;\n$RefreshReg$(_c, \"JobDescription\");","map":{"version":3,"names":["React","Sidebar","useParams","jsxDEV","_jsxDEV","JobDescription","jobs","_s","id","job","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","company","location","jobType","salary","experience","description","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/TalentTrackerFrontEnd/src/components/JobDescription.js"],"sourcesContent":["// JobDescription.js\r\nimport React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/JobDescription.css'; // Import the CSS file\r\n\r\nconst JobDescription = ({ jobs }) => {\r\n  const { id } = useParams(); // Get the ID from the URL parameter\r\n  // Find the job object based on the ID\r\n  const job = jobs.find(job => job.id === parseInt(id));\r\n\r\n  if (!job) {\r\n    return <div>Job not found</div>; // Handle case when job is not found\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-description-container\">\r\n      <Sidebar />\r\n      <div className=\"job-details\">\r\n        <h1>{job.title}</h1>\r\n        <div className=\"job-buttons\">\r\n          <button className=\"apply-button\">Apply Now</button>\r\n          <button className=\"save-button\">Save</button>\r\n        </div>\r\n        <hr />\r\n        <p>Company: {job.company}</p>\r\n        <p>Location: {job.location}</p>\r\n        <p>Job Type: {job.jobType}</p>\r\n        <p>Salary: {job.salary}</p>\r\n        <p>Experience: {job.experience}</p>\r\n        <h2>Job Description</h2>\r\n        <p>{job.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobDescription;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}