{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madar\\\\Desktop\\\\TalentTrackerFrontEnd\\\\src\\\\components\\\\EmployerLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/LoginForm.css';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from './UserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployerLogin = ({\n  handleLogin\n}) => {\n  _s();\n  var _location$state;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  const registrationSuccess = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.registrationSuccess;\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const {\n    setUser\n  } = useUserContext();\n  const isFormValid = () => {\n    if (!email.trim() || !password.trim()) {\n      return false; // Username and password should not be empty or whitespace only\n    }\n\n    return true;\n  };\n  // Helper function to set JWT token in localStorage\n  const setJwtToken = token => {\n    localStorage.setItem('jwtToken', token);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isFormValid()) {\n      window.alert('Please enter both username and password.');\n      return;\n    }\n    try {\n      let loginEndpoint;\n      let count;\n      if (email === 'admin' && password === 'admin') {\n        count = 0;\n        loginEndpoint = `${apiUrl}/adminlogin`; // Admin login endpoint\n      } else {\n        count = 1;\n        loginEndpoint = `${apiUrl}/empLogin`; // User login endpoint\n      }\n      // Replace 'http://localhost:5000' with your actual Spring Boot backend URL\n      console.log('Email:', email);\n      const response = await axios.post(loginEndpoint, {\n        email,\n        password\n        // Include the selected role in the request\n      });\n\n      if (response.status === 200) {\n        // Assuming the response.data contains user data\n        const userData = response.data;\n        console.log('this is response ', userData.token);\n        localStorage.setItem('jwtToken', userData.token);\n        // Access and store the JWT token from the Authorization header\n        const jwtToken = response.headers.authorization;\n        localStorage.setItem('userType', userData.userType);\n\n        // Set JWT token in localStorage\n        //setJwtToken(jwtToken);\n\n        setErrorMessage('');\n        handleLogin();\n\n        // Set user data in the context\n        setUser(userData);\n        console.log('Login successful', userData);\n        if (count === 0) {\n          navigate('/admin');\n        } else {\n          navigate('/employer');\n        }\n\n        // You can now use `jwtToken` for making authenticated requests.\n        //console.log('JWT Token:', jwtToken);\n      } else {\n        setErrorMessage('Login failed. Please check your user name and password.');\n        console.error('Login failed');\n      }\n    } catch (error) {\n      setErrorMessage('Login failed. Please check your user name and password.');\n      console.error('Login failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [registrationSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Registration successful! Please log in to continue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot-password-employer\",\n        className: \"forgot-password-link\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployerLogin, \"FqwmJzE7m02VwEp5MQFjbP3EpQ4=\", false, function () {\n  return [useLocation, useNavigate, useUserContext];\n});\n_c = EmployerLogin;\nexport default EmployerLogin;\nvar _c;\n$RefreshReg$(_c, \"EmployerLogin\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","Link","useUserContext","jsxDEV","_jsxDEV","EmployerLogin","handleLogin","_s","_location$state","email","setEmail","password","setPassword","errorMessage","setErrorMessage","location","registrationSuccess","state","navigate","apiUrl","process","env","REACT_APP_API_BASE_URL","setUser","isFormValid","trim","setJwtToken","token","localStorage","setItem","handleSubmit","e","preventDefault","window","alert","loginEndpoint","count","console","log","response","post","status","userData","data","jwtToken","headers","authorization","userType","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/Madar/Desktop/TalentTrackerFrontEnd/src/components/EmployerLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../css/LoginForm.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useUserContext } from './UserProvider';\r\n\r\n\r\nconst EmployerLogin = ({ handleLogin }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const location = useLocation();\r\n  const registrationSuccess = location.state?.registrationSuccess;\r\n  const navigate = useNavigate();\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n  const { setUser } = useUserContext();\r\n \r\n\r\n  const isFormValid = () => {\r\n    if (!email.trim() || !password.trim()) {\r\n      return false; // Username and password should not be empty or whitespace only\r\n    }\r\n    return true;\r\n  };\r\n  // Helper function to set JWT token in localStorage\r\n  const setJwtToken = (token) => {\r\n    localStorage.setItem('jwtToken', token);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isFormValid()) {\r\n      window.alert('Please enter both username and password.');\r\n      return;\r\n    }\r\n    try {\r\n\r\n      let loginEndpoint;\r\n      let count;\r\n    if (email === 'admin' && password === 'admin') {\r\n       count=0;\r\n      loginEndpoint = `${apiUrl}/adminlogin`; // Admin login endpoint\r\n    } else {\r\n      count=1;\r\n      loginEndpoint = `${apiUrl}/empLogin`; // User login endpoint\r\n    }\r\n      // Replace 'http://localhost:5000' with your actual Spring Boot backend URL\r\n      console.log('Email:', email);\r\n      const response = await axios.post(loginEndpoint, {\r\n        email,\r\n        password,\r\n         // Include the selected role in the request\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the response.data contains user data\r\n        const userData = response.data;\r\n        console.log('this is response ',userData.token);\r\n        localStorage.setItem('jwtToken', userData.token);\r\n        // Access and store the JWT token from the Authorization header\r\n        const jwtToken = response.headers.authorization;\r\n        localStorage.setItem('userType', userData.userType);\r\n\r\n      \r\n        // Set JWT token in localStorage\r\n        //setJwtToken(jwtToken);\r\n\r\n        setErrorMessage('');\r\n        handleLogin();\r\n\r\n        // Set user data in the context\r\n        setUser(userData);\r\n        console.log('Login successful', userData);\r\n\r\n        if (count === 0) {\r\n          navigate('/admin');\r\n        } else {\r\n          navigate('/employer');\r\n        }\r\n\r\n        // You can now use `jwtToken` for making authenticated requests.\r\n        //console.log('JWT Token:', jwtToken);\r\n      } \r\n      else {\r\n        setErrorMessage('Login failed. Please check your user name and password.');\r\n        console.error('Login failed');\r\n      }\r\n    }catch (error) {\r\n      setErrorMessage('Login failed. Please check your user name and password.');\r\n      console.error('Login failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        {registrationSuccess && (\r\n          <div className=\"success-message\">\r\n            Registration successful! Please log in to continue.\r\n          </div>\r\n        )}\r\n        <h2>Login</h2>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Link to=\"/forgot-password-employer\" className=\"forgot-password-link\">\r\n          Forgot Password\r\n        </Link>\r\n        <button type=\"submit\">Login</button>\r\n        \r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployerLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}