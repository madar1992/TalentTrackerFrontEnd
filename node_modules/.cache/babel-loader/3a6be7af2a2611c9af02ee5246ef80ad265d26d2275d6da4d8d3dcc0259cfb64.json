{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madar\\\\Desktop\\\\TalentTrackerFrontEnd\\\\src\\\\components\\\\UserProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUserContext = () => {\n  _s();\n  return useContext(UserContext);\n};\n_s(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [userType, setUserType] = useState('');\n\n  // Load user data and userType from localStorage on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    if (storedUserType) {\n      setUserType(storedUserType);\n    }\n  }, []);\n\n  // Update user data and userType in localStorage whenever user or userType changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user'); // Clear user data from localStorage\n    }\n  }, [user]);\n  useEffect(() => {\n    if (userType) {\n      localStorage.setItem('userType', userType);\n    } else {\n      localStorage.removeItem('userType'); // Clear userType from localStorage\n    }\n  }, [userType]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      userType,\n      setUserType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"yxAJfOotHwprYUEBoqL4bPRGcHI=\");\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","useUserContext","_s","UserProvider","children","_s2","user","setUser","userType","setUserType","storedUser","localStorage","getItem","storedUserType","JSON","parse","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Madar/Desktop/TalentTrackerFrontEnd/src/components/UserProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [userType, setUserType] = useState('');\r\n\r\n  // Load user data and userType from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedUserType = localStorage.getItem('userType');\r\n\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n\r\n    if (storedUserType) {\r\n      setUserType(storedUserType);\r\n    }\r\n  }, []);\r\n\r\n  // Update user data and userType in localStorage whenever user or userType changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user'); // Clear user data from localStorage\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (userType) {\r\n      localStorage.setItem('userType', userType);\r\n    } else {\r\n      localStorage.removeItem('userType'); // Clear userType from localStorage\r\n    }\r\n  }, [userType]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser, userType, setUserType }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,cAAc;AAI3B,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEvD,IAAIF,UAAU,EAAE;MACdH,OAAO,CAACO,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;IACjC;IAEA,IAAIG,cAAc,EAAE;MAClBJ,WAAW,CAACI,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAE;MACRK,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC;IACpD,CAAC,MAAM;MACLK,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEVT,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZG,YAAY,CAACK,OAAO,CAAC,UAAU,EAAER,QAAQ,CAAC;IAC5C,CAAC,MAAM;MACLG,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACET,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEC,OAAO;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAAL,QAAA,EACnEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,GAAA,CAxCIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}