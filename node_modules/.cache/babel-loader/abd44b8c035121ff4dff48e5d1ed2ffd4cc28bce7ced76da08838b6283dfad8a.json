{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madar\\\\Desktop\\\\TalentTrackerFrontEnd\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [resetSuccess, setResetSuccess] = useState(false);\n  const [resetError, setResetError] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [otpVerified, setOtpVerified] = useState(false);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const handleSendOTP = async () => {\n    try {\n      // Send a request to the server to send an OTP to the provided email\n      const response = await axios.post(`${apiUrl}/send-otp`, {\n        email\n      });\n      if (response.data === 'OTP sent successfully') {\n        setOtpSent(true);\n        setResetSuccess(false);\n        setResetError('');\n      } else {\n        setOtpSent(false);\n        setOtpVerified(false);\n        setResetError('OTP request failed. Please try again later.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setOtpSent(false);\n      setOtpVerified(false);\n      setResetError('An error occurred. Please try again later.');\n    }\n  };\n  const handleVerifyOTP = async () => {\n    try {\n      // Send a request to the server to verify the OTP\n      const response = await axios.post(`${apiUrl}/verify-otp`, {\n        email,\n        otp\n      });\n      if (response.data === 'success') {\n        setOtpVerified(true);\n        setResetError('');\n      } else {\n        setOtpVerified(false);\n        setResetError('OTP verification failed. Please enter a valid OTP.');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setOtpVerified(false);\n      setResetError('An error occurred. Please try again later.');\n    }\n  };\n  const handleResetPassword = async () => {\n    try {\n      // Send a request to the server to reset the password\n      const response = await axios.post(`${apiUrl}/reset-password`, {\n        email\n      });\n      if (response.data === 'success') {\n        setResetSuccess(true);\n        setResetError('');\n      } else {\n        setResetSuccess(false);\n        setResetError('Password reset failed. Please try again later.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setResetSuccess(false);\n      setResetError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-content\",\n      children: resetSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset request sent successfully. Check your email for further instructions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), otpSent ? otpVerified ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: \"OTP verified successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetPassword,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: e => setOtp(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVerifyOTP,\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendOTP,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), resetError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: resetError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"qUUjY9j0W2FCXmXeSVqlO9nlT9c=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","resetSuccess","setResetSuccess","resetError","setResetError","otpSent","setOtpSent","otp","setOtp","otpVerified","setOtpVerified","apiUrl","process","env","REACT_APP_API_BASE_URL","handleSendOTP","response","post","data","error","console","handleVerifyOTP","handleResetPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Madar/Desktop/TalentTrackerFrontEnd/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [resetSuccess, setResetSuccess] = useState(false);\r\n  const [resetError, setResetError] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otp, setOtp] = useState('');\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      // Send a request to the server to send an OTP to the provided email\r\n      const response = await axios.post(`${apiUrl}/send-otp`, { email });\r\n\r\n      if (response.data === 'OTP sent successfully') {\r\n        setOtpSent(true);\r\n        setResetSuccess(false);\r\n        setResetError('');\r\n      } else {\r\n        setOtpSent(false);\r\n        setOtpVerified(false);\r\n        setResetError('OTP request failed. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setOtpSent(false);\r\n      setOtpVerified(false);\r\n      setResetError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    try {\r\n      // Send a request to the server to verify the OTP\r\n      const response = await axios.post(`${apiUrl}/verify-otp`, { email, otp });\r\n\r\n      if (response.data === 'success') {\r\n        setOtpVerified(true);\r\n        setResetError('');\r\n      } else {\r\n        setOtpVerified(false);\r\n        setResetError('OTP verification failed. Please enter a valid OTP.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      setOtpVerified(false);\r\n      setResetError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      // Send a request to the server to reset the password\r\n      const response = await axios.post(`${apiUrl}/reset-password`, { email });\r\n\r\n      if (response.data === 'success') {\r\n        setResetSuccess(true);\r\n        setResetError('');\r\n      } else {\r\n        setResetSuccess(false);\r\n        setResetError('Password reset failed. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setResetSuccess(false);\r\n      setResetError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container\">\r\n      <div className=\"forgot-password-content\">\r\n        {resetSuccess ? (\r\n          <div className=\"success-message\">\r\n            Password reset request sent successfully. Check your email for further instructions.\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>Forgot Password</h2>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {otpSent ? (\r\n              otpVerified ? (\r\n                <div>\r\n                  <p style={{ color: 'green' }}>OTP verified successfully!</p>\r\n                  <button onClick={handleResetPassword}>Reset Password</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter OTP\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                  />\r\n                  <button onClick={handleVerifyOTP}>Verify OTP</button>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <button onClick={handleSendOTP}>Send OTP</button>\r\n            )}\r\n            {resetError && <div className=\"error-message\">{resetError}</div>}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}