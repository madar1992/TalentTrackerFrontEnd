{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madar\\\\Desktop\\\\talenttrackerapp\\\\src\\\\components\\\\PdfUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUpload = () => {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (pdfFile) {\n      const formData = new FormData();\n      formData.append('pdfFile', pdfFile);\n      try {\n        const response = await axios.post('apiUrl/upload-pdf', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setUploadMessage('PDF uploaded and converted to JSON successfully.');\n        console.log('Response:', response.data);\n      } catch (error) {\n        setUploadMessage('Error uploading PDF.');\n        console.error('Error:', error);\n      }\n    } else {\n      setUploadMessage('Please choose a PDF file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleUpload,\n      children: \"Upload and Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: uploadMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfUpload, \"AUdnbmwZtGkPsYdGAMXdWaB3aPk=\");\n_c = PdfUpload;\nexport default PdfUpload;\nvar _c;\n$RefreshReg$(_c, \"PdfUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PdfUpload","_s","pdfFile","setPdfFile","uploadMessage","setUploadMessage","apiUrl","process","env","REACT_APP_API_BASE_URL","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","console","log","data","error","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Madar/Desktop/talenttrackerapp/src/components/PdfUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PdfUpload = () => {\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [uploadMessage, setUploadMessage] = useState('');\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    setPdfFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (pdfFile) {\r\n      const formData = new FormData();\r\n      formData.append('pdfFile', pdfFile);\r\n\r\n      try {\r\n        const response = await axios.post('apiUrl/upload-pdf', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n\r\n        setUploadMessage('PDF uploaded and converted to JSON successfully.');\r\n        console.log('Response:', response.data);\r\n      } catch (error) {\r\n        setUploadMessage('Error uploading PDF.');\r\n        console.error('Error:', error);\r\n      }\r\n    } else {\r\n      setUploadMessage('Please choose a PDF file to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n      <button type=\"button\" onClick={handleUpload}>Upload and Convert</button>\r\n      {uploadMessage && <div>{uploadMessage}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAGjD,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BR,UAAU,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIZ,OAAO,EAAE;MACX,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEf,OAAO,CAAC;MAEnC,IAAI;QACF,MAAMgB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,mBAAmB,EAAEJ,QAAQ,EAAE;UAC/DK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEFf,gBAAgB,CAAC,kDAAkD,CAAC;QACpEgB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdnB,gBAAgB,CAAC,sBAAsB,CAAC;QACxCgB,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC,MAAM;MACLnB,gBAAgB,CAAC,qCAAqC,CAAC;IACzD;EACF,CAAC;EAED,oBACEN,OAAA;IAAA0B,QAAA,gBAEE1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DjC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEnB,YAAa;MAAAW,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvE5B,aAAa,iBAAIL,OAAA;MAAA0B,QAAA,EAAMrB;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAzCID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}