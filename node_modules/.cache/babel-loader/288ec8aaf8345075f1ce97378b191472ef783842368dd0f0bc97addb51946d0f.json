{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madar\\\\Desktop\\\\TalentTrackerFrontEnd\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../css/ForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [password, setPassword] = useState(''); // New password field\n  const [confirmPassword, setConfirmPassword] = useState(''); // Confirm password field\n  const [resetSuccess, setResetSuccess] = useState(false);\n  const [resetError, setResetError] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const handleSendOTP = async () => {\n    try {\n      // Send a request to the server to send an OTP to the provided email\n      const response = await axios.post(`${apiUrl}/verifyEmail`, {\n        email\n      });\n      if (response.data === 'OTP sent successfully') {\n        setOtpSent(true);\n        setResetSuccess(false);\n        setResetError('');\n      } else {\n        setOtpSent(false);\n        setOtpVerified(false);\n        setResetError('User with given Email Id was not found in the system');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setOtpSent(false);\n      setOtpVerified(false);\n      setResetError('An error occurred. Please try again later.');\n    }\n  };\n  const handleVerifyOTP = async () => {\n    try {\n      // Send a request to the server to verify the OTP\n      const response = await axios.post(`${apiUrl}/verify-otp`, {\n        email,\n        otp\n      });\n      if (response.data === 'OTP verified successfully') {\n        setOtpVerified(true);\n        setResetError('');\n      } else {\n        setOtpVerified(false);\n        setResetError('OTP verification failed. Please enter a valid OTP.');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setOtpVerified(false);\n      setResetError('OTP verification failed. Please enter a valid OTP.');\n    }\n  };\n  const handleResetPassword = async () => {\n    if (password !== confirmPassword) {\n      setResetSuccess(false);\n      setResetError('Passwords do not match. Please make sure the passwords match.');\n      return;\n    }\n    const isPasswordValid = password => {\n      // Password must be at least 6 characters long\n      if (password.length < 6) {\n        return false;\n      }\n\n      // Password must contain at least one uppercase letter\n      if (!/[A-Z]/.test(password)) {\n        return false;\n      }\n\n      // Password must contain at least one special character (non-alphanumeric)\n      if (!/[^A-Za-z0-9]/.test(password)) {\n        return false;\n      }\n\n      // Password cannot contain spaces\n      if (/\\s/.test(password)) {\n        return false;\n      }\n      return true;\n    };\n\n    // Add password validation here\n    if (!isPasswordValid(password)) {\n      setResetSuccess(false);\n      setResetError('Password does not meet the criteria.');\n      return;\n    }\n    try {\n      // Send a request to the server to reset the password with the new password\n      const response = await axios.post(`${apiUrl}/reset-password`, {\n        email,\n        password\n      });\n      if (response.data === 'Password reset was done successfully') {\n        setResetSuccess(true);\n        setResetError('');\n      } else {\n        setResetSuccess(false);\n        setResetError('Password reset failed. Please try again later.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setResetSuccess(false);\n      setResetError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-content\",\n      children: resetSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset was done successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), otpSent ? otpVerified ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"New Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm New Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"helpful-line\",\n            children: \"Password must be at least 6 characters long, contain one uppercase letter, one lowercase letter, one number, one special character, and no spaces.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetPassword,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: \"OTP verified successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: e => setOtp(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVerifyOTP,\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSendOTP,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), resetError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: resetError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"kVDbcAAcYZUlA6DwPyeQD126JY4=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","otp","setOtp","password","setPassword","confirmPassword","setConfirmPassword","resetSuccess","setResetSuccess","resetError","setResetError","otpSent","setOtpSent","otpVerified","setOtpVerified","apiUrl","process","env","REACT_APP_API_BASE_URL","handleSendOTP","response","post","data","error","console","handleVerifyOTP","handleResetPassword","isPasswordValid","length","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Madar/Desktop/TalentTrackerFrontEnd/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/ForgotPassword.css'\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [password, setPassword] = useState(''); // New password field\r\n  const [confirmPassword, setConfirmPassword] = useState(''); // Confirm password field\r\n  const [resetSuccess, setResetSuccess] = useState(false);\r\n  const [resetError, setResetError] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      // Send a request to the server to send an OTP to the provided email\r\n      const response = await axios.post(`${apiUrl}/verifyEmail`, { email });\r\n\r\n      if (response.data === 'OTP sent successfully') {\r\n        setOtpSent(true);\r\n        setResetSuccess(false);\r\n        setResetError('');\r\n      } else {\r\n        setOtpSent(false);\r\n        setOtpVerified(false);\r\n        setResetError('User with given Email Id was not found in the system');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setOtpSent(false);\r\n      setOtpVerified(false);\r\n      setResetError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    try {\r\n      // Send a request to the server to verify the OTP\r\n      const response = await axios.post(`${apiUrl}/verify-otp`, { email, otp });\r\n\r\n      if (response.data === 'OTP verified successfully') {\r\n        setOtpVerified(true);\r\n        setResetError('');\r\n      } else {\r\n        setOtpVerified(false);\r\n        setResetError('OTP verification failed. Please enter a valid OTP.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      setOtpVerified(false);\r\n      setResetError('OTP verification failed. Please enter a valid OTP.');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n\r\n    if (password !== confirmPassword) {\r\n      setResetSuccess(false);\r\n      setResetError('Passwords do not match. Please make sure the passwords match.');\r\n      return;\r\n    }\r\n    const isPasswordValid = (password) => {\r\n      // Password must be at least 6 characters long\r\n      if (password.length < 6) {\r\n        return false;\r\n      }\r\n    \r\n      // Password must contain at least one uppercase letter\r\n      if (!/[A-Z]/.test(password)) {\r\n        return false;\r\n      }\r\n    \r\n      // Password must contain at least one special character (non-alphanumeric)\r\n      if (!/[^A-Za-z0-9]/.test(password)) {\r\n        return false;\r\n      }\r\n    \r\n      // Password cannot contain spaces\r\n      if (/\\s/.test(password)) {\r\n        return false;\r\n      }\r\n    \r\n      return true;\r\n    };\r\n\r\n    // Add password validation here\r\n  if (!isPasswordValid(password)) {\r\n    setResetSuccess(false);\r\n    setResetError('Password does not meet the criteria.');\r\n    return;\r\n  }\r\n\r\n    try {\r\n      // Send a request to the server to reset the password with the new password\r\n      const response = await axios.post(`${apiUrl}/reset-password`, {\r\n        email,\r\n        password,\r\n        \r\n      });\r\n\r\n      if (response.data === 'Password reset was done successfully') {\r\n        setResetSuccess(true);\r\n        setResetError('');\r\n      } else {\r\n        setResetSuccess(false);\r\n        setResetError('Password reset failed. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setResetSuccess(false);\r\n      setResetError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container\">\r\n      <div className=\"forgot-password-content\">\r\n        {resetSuccess ? (\r\n          <div className=\"success-message\">\r\n            Password reset was done successfully.\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>Forgot Password</h2>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {otpSent ? (\r\n              otpVerified ? (\r\n                <div>\r\n                 \r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  \r\n\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  />\r\n                  <div className=\"helpful-line\">\r\n  Password must be at least 6 characters long, contain one uppercase letter, one lowercase letter, one number, one special character, and no spaces.\r\n</div>\r\n\r\n                  <button onClick={handleResetPassword}>Reset Password</button>\r\n                  <p style={{ color: 'green' }}>OTP verified successfully!</p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter OTP\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                  />\r\n                  <button type=\"button\" onClick={handleVerifyOTP}>Verify OTP</button>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\r\n            )}\r\n            {resetError && <div className=\"error-message\">{resetError}</div>}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}