[{"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\index.js":"1","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\reportWebVitals.js":"2","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\App.js":"3","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\HomePage.js":"4","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Login.js":"5","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Register.js":"6","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Navbar.js":"7","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\About.js":"8","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Footer.js":"9","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\userHome.js":"10","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\UserHome.js":"11","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Admin.js":"12","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Profile.js":"13","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\OTPVerification.js":"14","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\RecurterRegister.js":"15","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\EmployerLogin.js":"16","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\EmployerHome.js":"17","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\UserTable.js":"18","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Sidebar.js":"19","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\ForgotPassword.js":"20","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\JobCard.js":"21","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\JobDescription.js":"22"},{"size":535,"mtime":1690786628175,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1690786628384,"results":"25","hashOfConfig":"24"},{"size":2502,"mtime":1693411064148,"results":"26","hashOfConfig":"24"},{"size":1225,"mtime":1692278992235,"results":"27","hashOfConfig":"24"},{"size":2890,"mtime":1693046842546,"results":"28","hashOfConfig":"24"},{"size":9136,"mtime":1693043695320,"results":"29","hashOfConfig":"24"},{"size":2061,"mtime":1693043923992,"results":"30","hashOfConfig":"24"},{"size":1009,"mtime":1691048103469,"results":"31","hashOfConfig":"24"},{"size":1731,"mtime":1691057906706,"results":"32","hashOfConfig":"24"},{"size":332,"mtime":1691047129154,"results":"33","hashOfConfig":"24"},{"size":1270,"mtime":1693411245678,"results":"34","hashOfConfig":"24"},{"size":332,"mtime":1691056626154,"results":"35","hashOfConfig":"24"},{"size":20796,"mtime":1693388351512,"results":"36","hashOfConfig":"24"},{"size":1914,"mtime":1693038573934,"results":"37","hashOfConfig":"24"},{"size":10702,"mtime":1693044199171,"results":"38","hashOfConfig":"24"},{"size":3274,"mtime":1693046769137,"results":"39","hashOfConfig":"24"},{"size":592,"mtime":1692352007717,"results":"40","hashOfConfig":"24"},{"size":739,"mtime":1692351972436,"results":"41","hashOfConfig":"24"},{"size":1486,"mtime":1693126999876,"results":"42","hashOfConfig":"24"},{"size":1442,"mtime":1693046936392,"results":"43","hashOfConfig":"24"},{"size":1644,"mtime":1693409415774,"results":"44","hashOfConfig":"24"},{"size":1178,"mtime":1693411880439,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"93d1zu",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\index.js",[],[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\App.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\HomePage.js",["121","122","123"],[],"import React from 'react';\r\nimport '../css/HomePage.css';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Asset from '../images/Asset.png';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"left-side\">\r\n        <h2>Where Opportunities and Aspirations Align</h2>\r\n        <p>\r\n          Empowering your journey towards success and fulfillment. Whether you are a recruiter looking for top talents or an individual seeking new opportunities,\r\n          Join us today and unlock the full potential of talent management!\r\n        </p>\r\n\r\n        {/* Wrap the buttons in a container */}\r\n        <div className=\"cta-buttons-container\">\r\n          <Link to=\"/register\" className=\"cta-button\">JobSeekerRegister</Link>\r\n          <Link to=\"/employerRegister\" className=\"cta-button\">RecruiterRegister</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"right-side\">\r\n        <img src={Asset} alt=\"Talent Tracker\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Login.js",["124"],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Register.js",["125"],[],"import React, { useState } from 'react';\r\nimport OTPVerification from './OTPVerification';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/RegistrationForm.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Register = () => {\r\n\r\n  const [otpSent, setOTPSent] = useState(false); // Track whether OTP is sent\r\n  const [otpVerified, setOTPVerified] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobilenumber, setMobilenumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false); // New state variable\r\n  const navigate = useNavigate();\r\n  const [registrationInProgress, setRegistrationInProgress] = useState(false);\r\n  const [otpSendingInProgress, setOTPSendingInProgress] = useState(false); // New state variable for sending OTP\r\n  const [otpVerifyingInProgress, setOTPVerifyingInProgress] = useState(false); // New state variable for verifying OTP \r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n\r\n  \r\n\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      setOTPSendingInProgress(true); // Set sending OTP in progress\r\n      await axios.post(`${apiUrl}/send-otp`, { email });\r\n      setOTPSent(true);\r\n      setOTPSendingInProgress(false); // Clear sending OTP in progress\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setOTPSendingInProgress(false); // Clear sending OTP in progress in case of error\r\n    }\r\n  };\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const isPasswordValid = (password) => {\r\n    // Password must be at least 6 characters long\r\n    if (password.length < 6) {\r\n      return false;\r\n    }\r\n  \r\n    // Password must contain at least one uppercase letter\r\n    if (!/[A-Z]/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    // Password must contain at least one special character (non-alphanumeric)\r\n    if (!/[^A-Za-z0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    // Password cannot contain spaces\r\n    if (/\\s/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    return true;\r\n  };\r\n  \r\n  const isMobileNumberValid = (mobilenumber) => {\r\n    // Mobile number must contain only numeric digits\r\n    if (!/^\\d+$/.test(mobilenumber)) {\r\n      return false;\r\n    }\r\n\r\n    // Mobile number must have a specific length (e.g., 10 digits)\r\n    if (mobilenumber.length !== 10) {\r\n      return false;\r\n    }\r\n\r\n    const firstDigit = mobilenumber.charAt(0);\r\n  if (!['6', '7', '8', '9'].includes(firstDigit)) {\r\n    return false;\r\n  }\r\n    return true;\r\n  };\r\n  const isFormValid = () => {\r\n    if (!isEmailValid(email)) {\r\n      setErrorMessage('Please enter a valid email address.');\r\n      return false;\r\n    }\r\n    if (!isMobileNumberValid(mobilenumber)) {\r\n      setErrorMessage('Please enter a valid 10-digit mobile number & should begin with 6 or 7 or 8 or 9.');\r\n      return false;\r\n    }\r\n    if (!isPasswordValid(password)) {\r\n      setErrorMessage('Password must be at least 6 characters long and should have one cpital letter and one small letter and no spaces are allowed.');\r\n      return false;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n    \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isFormValid()) {\r\n      return; // Do not proceed with registration if form is invalid\r\n    }\r\n\r\n    try {\r\n      setRegistrationInProgress(true);\r\n      // Send the form data to the backend server using Axios POST request\r\n      const response = await axios.post(`${apiUrl}/register`, {\r\n        name,\r\n        email,\r\n        mobilenumber,\r\n        password,\r\n        confirmPassword,\r\n      });\r\n\r\n      // Clear any previous error messages if the registration is successful\r\n      // If OTP is sent, render OTPVerification component\r\n      \r\n      setErrorMessage('');\r\n      setRegistrationSuccess(true);\r\n\r\n      \r\n      // Handle the response from the server (e.g., show a success message)\r\n      console.log('Registration successful', response.data);\r\n      // Show a window alert for successful registration\r\n      setName('');\r\n      setEmail('');\r\n      setMobilenumber('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setRegistrationInProgress(false);\r\n\r\n      // Use the navigate function to navigate to the home screen\r\n      if (otpSent && otpVerified) {\r\n        navigate('/login', { state: { registrationSuccess: true } });\r\n      }\r\n    } catch (error) {\r\n      // Handle registration errors (e.g., show an error message)\r\n      setErrorMessage('Registration failed. Please try again later.');\r\n      setRegistrationInProgress(false);\r\n      window.alert('Registration failed! user with this email already exist');\r\n      console.error('Registration failed', error);\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"registration-form-container\">\r\n      <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n        <h2>Register</h2>\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Enter your full name</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Enter your email address</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Mobile Number\"\r\n            value={mobilenumber}\r\n            onChange={(e) => setMobilenumber(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Enter your 10-digit mobile number and mobile number should begin with 6 or 7 or 8 or 9</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">\r\n          Password must be at least 6 characters long, contain one uppercase letter, one lowercase letter, one number, one special character, and no spaces.\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Re-enter your password to confirm</div>\r\n        </div>\r\n        \r\n        {otpSent && !otpVerified ? (\r\n  <div>\r\n    <p style={{ color: 'green' }}>OTP sent to your email. Please check and enter below:</p>\r\n    <OTPVerification\r\n            email={email}\r\n            onOTPVerified={() => setOTPVerified(true)}\r\n            otpVerifyingInProgress={otpVerifyingInProgress}\r\n            setOTPVerifyingInProgress={setOTPVerifyingInProgress}\r\n          />\r\n    <button\r\n      type=\"button\"\r\n      onClick={handleSendOTP}\r\n      disabled={otpSent || registrationInProgress || otpSendingInProgress}\r\n    >\r\n      {otpSendingInProgress ? (\r\n        \r\n        <div className=\"spinner\"></div>\r\n       \r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </button>\r\n  </div>\r\n) : (\r\n  <div>\r\n    {otpVerified ? (\r\n      <div style={{ color: 'green' }}>\r\n        <p >OTP verified successfully! Click on Register to proceed</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <div className=\"helpful-line\">Click on send OTP to verify your email</div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSendOTP}\r\n          disabled={otpSent || registrationInProgress || otpSendingInProgress}\r\n        >\r\n          {otpSendingInProgress ? (\r\n             <div className=\"status-container\">\r\n             <div className=\"spinner\"></div>\r\n             <div className=\"status-text\">Sending OTP</div>\r\n           </div>\r\n          ) : (\r\n            'Send OTP'\r\n          )}\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n{otpVerified && (\r\n  <button type=\"submit\">\r\n    {registrationInProgress ? (\r\n       <div className=\"status-container\">\r\n       <div className=\"spinner\"></div>\r\n       <div className=\"status-text\">Registering</div>\r\n     </div>\r\n    ) : (\r\n      'Register'\r\n    )}\r\n  </button>\r\n)}\r\n\r\n      </form>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Navbar.js",["126","127","128","129","130","131"],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\About.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Footer.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\userHome.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\UserHome.js",[],[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Admin.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Profile.js",["132","133"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"../css/Profile.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nconst apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n \r\n\r\nconst Profile = () => {\r\n\r\n  const [basicDetails, setBasicDetails] = useState({\r\n\r\n    firstName: \"\",\r\n\r\n    lastName: \"\",\r\n\r\n    dateOfBirth: \"\",\r\n\r\n    address: \"\",\r\n\r\n    city: \"\",\r\n\r\n    state: \"\",\r\n\r\n    pincode: \"\",\r\n\r\n    alternatePhoneNumber: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [xClassDetails, setXClassDetails] = useState({\r\n\r\n    schoolName: \"\",\r\n\r\n    board: \"\",\r\n\r\n    percentage: \"\",\r\n\r\n    yearOfPassing: \"\",\r\n\r\n    xCity: \"\",\r\n\r\n    xState: \"\",\r\n\r\n    xPincode: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [intermediateDetails, setIntermediateDetails] = useState({\r\n\r\n    collegeName: \"\",\r\n\r\n    board: \"\",\r\n\r\n    program: \"\",\r\n\r\n    percentage: \"\",\r\n\r\n    yearOfPassing: \"\",\r\n\r\n    iCity: \"\",\r\n\r\n    iState: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [engineeringDetails, setEngineeringDetails] = useState({\r\n\r\n    collegeName: \"\",\r\n\r\n    board: \"\",\r\n\r\n    program: \"\",\r\n\r\n    percentage: \"\",\r\n\r\n    yearOfPassing: \"\",\r\n\r\n    eCity: \"\",\r\n\r\n    eState: \"\",\r\n\r\n  });\r\n\r\n  // Skills state\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [experienceDetails, setExperienceDetails] = useState([\r\n    {\r\n      company: \"\",\r\n      position: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    },\r\n  ]);\r\n  \r\n\r\n  const [resumeFile, setResumeFile] = useState(null);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const [selectedSkill, setSelectedSkill] = useState(\"\");\r\n\r\n\r\n  const handleExperienceChange = (e, index, field) => {\r\n    const newExperienceDetails = [...experienceDetails];\r\n    newExperienceDetails[index][field] = e.target.value;\r\n    setExperienceDetails(newExperienceDetails);\r\n  };\r\n  const addExperience = () => {\r\n    setExperienceDetails([...experienceDetails, { company: \"\", position: \"\", startDate: \"\", endDate: \"\" }]);\r\n  };\r\n  \r\n  const handleSkillSelect = (skill) => {\r\n    setSelectedSkill(skill);\r\n  };\r\n\r\n  const handleFileDrop = (e) => {\r\n    e.preventDefault();\r\n    setDragging(false);\r\n    const file = e.dataTransfer.files[0];\r\n    setResumeFile(file);\r\n  };\r\n  \r\n \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare data to be sent\r\n    const userData = {\r\n      basicDetails,\r\n      xClassDetails,\r\n      intermediateDetails,\r\n      engineeringDetails,\r\n      skills,\r\n      experienceDetails,\r\n    };\r\n\r\n    try {\r\n      // Send data to the backend using Fetch API\r\n      const response = await fetch(`${apiUrl}/updateProfile`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Data successfully sent to the backend\r\n        console.log(\"Data sent successfully!\");\r\n      } else {\r\n        // Handle error case\r\n        console.error(\"Failed to send data to the backend\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"sidebar\">\r\n       <Sidebar />\r\n      </div>\r\n    <form className=\"profile-form-container\" onSubmit={handleSubmit}>\r\n       <h1>Update your profile</h1>\r\n      {/* File Upload section */}\r\n      <div className=\"file-upload-container\">\r\n        <p className=\"Details-name\">Upload your resume:</p>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.doc,.docx\"\r\n          onChange={(e) => setResumeFile(e.target.files[0])}\r\n        />\r\n        <div\r\n        className={`file-drop-area ${dragging ? \"dragging\" : \"\"}`}\r\n        onDrop={handleFileDrop}\r\n        onDragOver={(e) => {\r\n          e.preventDefault();\r\n          setDragging(true);\r\n        }}\r\n        onDragLeave={() => setDragging(false)}\r\n      >\r\n        <p className=\"Details-name\">Drag and drop your resume here</p>\r\n      </div>\r\n\r\n      </div>\r\n\r\n\r\n      <p className=\"Details-name\">Basic Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"FirstName\"\r\n\r\n                className=\"firstName\"\r\n\r\n                value={basicDetails.firstName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    firstName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"LastName\"\r\n\r\n                className=\"lastName\"\r\n\r\n                value={basicDetails.lastName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, lastName: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"date\"\r\n\r\n                placeholder=\"DateOfBirth\"\r\n\r\n                className=\"dateofbirth\"\r\n\r\n                value={basicDetails.dateOfBirth}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    dateOfBirth: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Address\"\r\n\r\n                value={basicDetails.address}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, address: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={basicDetails.city}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, city: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={basicDetails.state}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, state: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Pincode\"\r\n\r\n                value={basicDetails.pincode}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, pincode: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Alternate phone number\"\r\n\r\n                value={basicDetails.alternatePhoneNumber}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    alternatePhoneNumber: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">X-Class Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"School Name\"\r\n\r\n                value={xClassDetails.schoolName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    schoolName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={xClassDetails.board}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, board: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={xClassDetails.percentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    percentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of passing\"\r\n\r\n                value={xClassDetails.yearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    yearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={xClassDetails.xCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, xCity: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={xClassDetails.xState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, xState: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Pincode\"\r\n\r\n                value={xClassDetails.xPincode}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    xPincode: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">Intermediate Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Name of college\"\r\n\r\n                value={intermediateDetails.collegeName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    collegeName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={intermediateDetails.board}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    board: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Program\"\r\n\r\n                value={intermediateDetails.program}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    program: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={intermediateDetails.percentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    percentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of passing\"\r\n\r\n                value={intermediateDetails.yearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    yearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"city\"\r\n\r\n                value={intermediateDetails.iCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iCity: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={intermediateDetails.iState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iState: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">Engineering Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Name of college\"\r\n\r\n                value={engineeringDetails.collegeName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    collegeName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={engineeringDetails.board}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    board: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Program\"\r\n\r\n                value={engineeringDetails.program}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    program: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={engineeringDetails.percentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    percentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of Passing\"\r\n\r\n                value={engineeringDetails.yearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    yearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={engineeringDetails.eCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    eCity: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={engineeringDetails.eState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setEngineeringDetails({\r\n\r\n                    ...engineeringDetails,\r\n\r\n                    eState: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n     \r\n      <p className=\"Details-name\">Skills:</p>\r\n<div className=\"skills-buttons\">\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"HTML\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"HTML\")}\r\n  >\r\n    HTML\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"CSS\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"CSS\")}\r\n  >\r\n    CSS\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"JavaScript\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"JavaScript\")}\r\n  >\r\n    JavaScript\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Java\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Java\")}\r\n  >\r\n    Java\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Python\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Python\")}\r\n  >\r\n    Python\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"React\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"React\")}\r\n  >\r\n    React\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"SQL\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"SQL\")}\r\n  >\r\n    SQL\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"MongoDB\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"MongoDB\")}\r\n  >\r\n    MongoDB\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"MySQL\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"MySQL\")}\r\n  >\r\n    MySQL\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Bootstrap\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Bootstrap\")}\r\n  >\r\n    Bootstrap\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Vue.js\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Vue.js\")}\r\n  >\r\n    Vue.js\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Angular\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Angular\")}\r\n  >\r\n    Angular\r\n  </button>\r\n  <button\r\n    className={`skill-button ${selectedSkill === \"Flutter\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleSkillSelect(\"Flutter\")}\r\n  >\r\n    Flutter\r\n  </button>\r\n</div>\r\n {/* ...Previous Code... */}\r\n\r\n<p className=\"Details-name\">Experience Details:</p>\r\n\r\n{experienceDetails.map((experience, index) => (\r\n  <table key={index} className=\"experience-table\">\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            value={experience.company}\r\n            onChange={(e) => handleExperienceChange(e, index, \"company\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Position\"\r\n            value={experience.position}\r\n            onChange={(e) => handleExperienceChange(e, index, \"position\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Start Date\"\r\n            value={experience.startDate}\r\n            onChange={(e) => handleExperienceChange(e, index, \"startDate\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"End Date\"\r\n            value={experience.endDate}\r\n            onChange={(e) => handleExperienceChange(e, index, \"endDate\")}\r\n          />\r\n        </td>\r\n        <td>\r\n        <button type=\"button\" onClick={addExperience}>Add Experience</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n   \r\n  </table>\r\n  \r\n))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\n \r\n\r\nexport default Profile;",[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\OTPVerification.js",["134"],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\RecurterRegister.js",["135"],[],"import React, { useState } from 'react';\r\nimport OTPVerification from './OTPVerification';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../css/RegistrationForm.css';\r\n\r\nconst RecruiterRegister = () => {\r\n  const [otpSent, setOTPSent] = useState(false);\r\n  const [otpVerified, setOTPVerified] = useState(false);\r\n  const [companyid, setCompanyid] = useState('');\r\n  const [companyname, setCompanyname] = useState('');\r\n  const [typeofcompany, setTypeofcompany] = useState('');\r\n  const [yourRole, setYourRole] = useState('');\r\n  const [employeeCount, setEmployeeCount] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobilenumber, setMobilenumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [registrationInProgress, setRegistrationInProgress] = useState(false);\r\n  const [otpSendingInProgress, setOTPSendingInProgress] = useState(false); // New state variable for sending OTP\r\n  const [otpVerifyingInProgress, setOTPVerifyingInProgress] = useState(false); // New state variable for verifying OTP \r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      setOTPSendingInProgress(true); // Set sending OTP in progress\r\n      await axios.post(`${apiUrl}/send-otp`, { email });\r\n      setOTPSent(true);\r\n      setOTPSendingInProgress(false); // Clear sending OTP in progress\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setOTPSendingInProgress(false); // Clear sending OTP in progress in case of error\r\n    }\r\n  };\r\n\r\n  const isPasswordValid = (password) => {\r\n    // Password must be at least 6 characters long\r\n    if (password.length < 6) {\r\n      return false;\r\n    }\r\n  \r\n    // Password must contain at least one uppercase letter\r\n    if (!/[A-Z]/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    // Password must contain at least one special character (non-alphanumeric)\r\n    if (!/[^A-Za-z0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    // Password cannot contain spaces\r\n    if (/\\s/.test(password)) {\r\n      return false;\r\n    }\r\n  \r\n    return true;\r\n  };\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n  const isMobileNumberValid = (mobilenumber) => {\r\n    // Mobile number must contain only numeric digits\r\n    if (!/^\\d+$/.test(mobilenumber)) {\r\n      return false;\r\n    }\r\n\r\n    // Mobile number must have a specific length (e.g., 10 digits)\r\n    if (mobilenumber.length !== 10) {\r\n      return false;\r\n    }\r\n\r\n    const firstDigit = mobilenumber.charAt(0);\r\n  if (!['6', '7', '8', '9'].includes(firstDigit)) {\r\n    return false;\r\n  }\r\n    return true;\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (!isEmailValid(email)) {\r\n      setErrorMessage('Please enter a valid email address.');\r\n      return false;\r\n    }\r\n    if (!isMobileNumberValid(mobilenumber)) {\r\n      setErrorMessage('Please enter a valid 10-digit mobile number & should begin with 6 or 7 or 8 or 9.');\r\n      return false;\r\n    }\r\n    if (!isPasswordValid(password)) {\r\n      setErrorMessage('Password must be at least 6 characters long and should have one cpital letter and one small letter and no spaces are allowed.');\r\n      return false;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n    \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isFormValid()) {\r\n      return; // Do not proceed with registration if form is invalid\r\n    }\r\n\r\n    try {\r\n      setRegistrationInProgress(true);\r\n      const response = await axios.post(`${apiUrl}/EmpRegister`, {\r\n        \r\n        companyid,\r\n        companyname,\r\n        typeofcompany,\r\n        yourRole,\r\n        employeeCount,\r\n        mobilenumber,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      setErrorMessage('');\r\n      setRegistrationSuccess(true);\r\n\r\n      console.log('Registration successful', response.data);\r\n      \r\n      setRegistrationInProgress(false);\r\n      if (otpSent && otpVerified) {\r\n        navigate('/login', { state: { registrationSuccess: true } });\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Registration failed. Please try again later.');\r\n      window.alert('Registration failed! User with this email already exists.');\r\n      console.error('Registration failed', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"registration-form-container\">\r\n      <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n        <h2>Recruiter Register</h2>\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        \r\n        \r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company ID\"\r\n            value={companyid}\r\n            onChange={(e) => setCompanyid(e.target.value)}\r\n          />\r\n          <div className=\"helpful-line\">Enter your company ID</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company Name\"\r\n            value={companyname}\r\n            onChange={(e) => setCompanyname(e.target.value)}\r\n          />\r\n          <div className=\"helpful-line\">Enter your company name</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type of Company\"\r\n            value={typeofcompany}\r\n            onChange={(e) => setTypeofcompany(e.target.value)}\r\n          />\r\n          <div className=\"helpful-line\">Enter the type of your company</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select value={yourRole} onChange={(e) => setYourRole(e.target.value)}>\r\n            <option value=\"\">Select Your Role</option>\r\n            <option value=\"Hiring Manager\">Hiring Manager</option>\r\n            <option value=\"Company Recruiter\">Company Recruiter</option>\r\n            <option value=\"Technical Recruiter\">Technical Recruiter</option>\r\n            <option value=\"Others\">Others</option>\r\n          </select>\r\n          <div className=\"helpful-line\">Select your role from the options</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select value={employeeCount} onChange={(e) => setEmployeeCount(e.target.value)}>\r\n            <option value=\"\">Select Employee Count</option>\r\n            <option value=\"5 to 10 Employees\">5 to 10 Employees</option>\r\n            <option value=\"10 to 50 Employees\">10 to 50 Employees</option>\r\n            <option value=\"50 to 200 Employees\">50 to 200 Employees</option>\r\n            <option value=\"200+ Employees\">200+ Employees</option>\r\n          </select>\r\n          <div className=\"helpful-line\">Select your company's employee count from the options</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Enter your email address</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Mobile Number\"\r\n            value={mobilenumber}\r\n            onChange={(e) => setMobilenumber(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Enter your 10-digit mobile number and mobile number should begin with 6 or 7 or 8 or 9</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">\r\n          Password must be at least 6 characters long, contain one uppercase letter, one lowercase letter, one number, one special character, and no spaces.\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          {/* Helpful line */}\r\n          <div className=\"helpful-line\">Re-enter your password to confirm</div>\r\n        </div>\r\n        {/* Rest of the code remains the same */}\r\n         {/* Include the PdfUpload component here */}\r\n        \r\n         {otpSent && !otpVerified ? (\r\n  <div>\r\n    <p style={{ color: 'green' }}>OTP sent to your email. Please check and enter below:</p>\r\n    <OTPVerification\r\n            email={email}\r\n            onOTPVerified={() => setOTPVerified(true)}\r\n            otpVerifyingInProgress={otpVerifyingInProgress}\r\n            setOTPVerifyingInProgress={setOTPVerifyingInProgress}\r\n          />\r\n    <button\r\n      type=\"button\"\r\n      onClick={handleSendOTP}\r\n      disabled={otpSent || registrationInProgress || otpSendingInProgress}\r\n    >\r\n      {otpSendingInProgress ? (\r\n        \r\n        <div className=\"spinner\"></div>\r\n       \r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </button>\r\n  </div>\r\n) : (\r\n  <div>\r\n    {otpVerified ? (\r\n      <div style={{ color: 'green' }}>\r\n        <p>OTP verified successfully! Click on Register to proceed</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <div className=\"helpful-line\">Click on send OTP to verify your email</div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSendOTP}\r\n          disabled={otpSent || registrationInProgress || otpSendingInProgress}\r\n        >\r\n          {otpSendingInProgress ? (\r\n             <div className=\"status-container\">\r\n             <div className=\"spinner\"></div>\r\n             <div className=\"status-text\">Sending OTP</div>\r\n           </div>\r\n          ) : (\r\n            'Send OTP'\r\n          )}\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n{otpVerified && (\r\n  <button type=\"submit\">\r\n    {registrationInProgress ? (\r\n       <div className=\"status-container\">\r\n       <div className=\"spinner\"></div>\r\n       <div className=\"status-text\">Registering</div>\r\n     </div>\r\n    ) : (\r\n      'Register'\r\n    )}\r\n  </button>\r\n)}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecruiterRegister;\r\n","C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\EmployerLogin.js",[],[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\EmployerHome.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\UserTable.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\Sidebar.js",["136","137"],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\ForgotPassword.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\JobCard.js",[],[],"C:\\Users\\Madar\\Desktop\\talenttrackerapp\\src\\components\\JobDescription.js",[],[],{"ruleId":"138","severity":1,"message":"139","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":20},{"ruleId":"138","severity":1,"message":"142","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":25},{"ruleId":"138","severity":1,"message":"143","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":21},{"ruleId":"138","severity":1,"message":"144","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":22},{"ruleId":"138","severity":1,"message":"145","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":29},{"ruleId":"138","severity":1,"message":"142","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":25},{"ruleId":"138","severity":1,"message":"146","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":16},{"ruleId":"138","severity":1,"message":"147","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":21},{"ruleId":"138","severity":1,"message":"148","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":22},{"ruleId":"138","severity":1,"message":"149","line":9,"column":10,"nodeType":"140","messageId":"141","endLine":9,"endColumn":22},{"ruleId":"138","severity":1,"message":"150","line":92,"column":18,"nodeType":"140","messageId":"141","endLine":92,"endColumn":27},{"ruleId":"138","severity":1,"message":"151","line":103,"column":10,"nodeType":"140","messageId":"141","endLine":103,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":28,"column":6,"nodeType":"154","endLine":28,"endColumn":19,"suggestions":"155"},{"ruleId":"138","severity":1,"message":"145","line":20,"column":10,"nodeType":"140","messageId":"141","endLine":20,"endColumn":29},{"ruleId":"138","severity":1,"message":"156","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":16},"no-unused-vars","'faUserPlus' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faSignInAlt' is defined but never used.","'ForgotPassword' is defined but never used.","'registrationSuccess' is assigned a value but never used.","'faUser' is defined but never used.","'faHome' is defined but never used.","'faSignOutAlt' is defined but never used.","'faUserCircle' is defined but never used.","'setSkills' is assigned a value but never used.","'resumeFile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setOTPVerifyingInProgress'. Either include it or remove the dependency array. If 'setOTPVerifyingInProgress' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"'Link' is defined but never used.",{"desc":"158","fix":"159"},"Update the dependencies array to be: [otpVerified, setOTPVerifyingInProgress]",{"range":"160","text":"161"},[1129,1142],"[otpVerified, setOTPVerifyingInProgress]"]