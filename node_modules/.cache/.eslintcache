[{"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\index.js":"1","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\App.js":"2","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Register.js":"4","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Login.js":"5","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\HomePage.js":"6","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserHome.js":"7","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\About.js":"8","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Admin.js":"9","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\EmployerHome.js":"10","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\ForgotPassword.js":"11","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\RecurterRegister.js":"12","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Navbar.js":"13","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Footer.js":"14","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Profile.js":"15","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\JobDescription.js":"16","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\EmployerLogin.js":"17","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserTable.js":"18","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\OTPVerification.js":"19","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Sidebar.js":"20","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\JobCard.js":"21","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserProvider.js":"22"},{"size":535,"mtime":1690786628175,"results":"23","hashOfConfig":"24"},{"size":2679,"mtime":1693499548413,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1690786628384,"results":"26","hashOfConfig":"24"},{"size":9136,"mtime":1693043695320,"results":"27","hashOfConfig":"24"},{"size":3187,"mtime":1693498560281,"results":"28","hashOfConfig":"24"},{"size":1225,"mtime":1692278992235,"results":"29","hashOfConfig":"24"},{"size":1270,"mtime":1693411245678,"results":"30","hashOfConfig":"24"},{"size":1009,"mtime":1691048103469,"results":"31","hashOfConfig":"24"},{"size":332,"mtime":1691056626154,"results":"32","hashOfConfig":"24"},{"size":592,"mtime":1692352007717,"results":"33","hashOfConfig":"24"},{"size":1442,"mtime":1693046936392,"results":"34","hashOfConfig":"24"},{"size":10702,"mtime":1693044199171,"results":"35","hashOfConfig":"24"},{"size":2061,"mtime":1693043923992,"results":"36","hashOfConfig":"24"},{"size":1731,"mtime":1691057906706,"results":"37","hashOfConfig":"24"},{"size":21867,"mtime":1693497339409,"results":"38","hashOfConfig":"24"},{"size":1178,"mtime":1693411880439,"results":"39","hashOfConfig":"24"},{"size":3274,"mtime":1693046769137,"results":"40","hashOfConfig":"24"},{"size":739,"mtime":1692351972436,"results":"41","hashOfConfig":"24"},{"size":1914,"mtime":1693038573934,"results":"42","hashOfConfig":"24"},{"size":1512,"mtime":1693500054797,"results":"43","hashOfConfig":"24"},{"size":2554,"mtime":1693542799728,"results":"44","hashOfConfig":"24"},{"size":933,"mtime":1693499518866,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yb9s98",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\index.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\App.js",[],[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\reportWebVitals.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Register.js",["117"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Login.js",["118"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\HomePage.js",["119","120","121"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserHome.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\About.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Admin.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\EmployerHome.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\ForgotPassword.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\RecurterRegister.js",["122"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Navbar.js",["123","124","125","126","127","128"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Footer.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Profile.js",["129","130","131","132"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../css/Profile.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nconst apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n \r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n\r\n  const [basicDetails, setBasicDetails] = useState({\r\n\r\n    firstName: \"\",\r\n\r\n    lastName: \"\",\r\n\r\n    dateOfBirth: \"\",\r\n\r\n    address: \"\",\r\n\r\n    city: \"\",\r\n\r\n    state: \"\",\r\n\r\n    pincode: \"\",\r\n\r\n    alternatePhoneNumber: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [xClassDetails, setXClassDetails] = useState({\r\n\r\n    xschoolName: \"\",\r\n\r\n    xboard: \"\",\r\n\r\n    xpercentage: \"\",\r\n\r\n    xyearOfPassing: \"\",\r\n\r\n    xCity: \"\",\r\n\r\n    xState: \"\",\r\n\r\n    xPincode: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [intermediateDetails, setIntermediateDetails] = useState({\r\n\r\n    icollegeName: \"\",\r\n\r\n    iboard: \"\",\r\n\r\n    iprogram: \"\",\r\n\r\n    ipercentage: \"\",\r\n\r\n    iyearOfPassing: \"\",\r\n\r\n    iCity: \"\",\r\n\r\n    iState: \"\",\r\n\r\n  });\r\n\r\n \r\n\r\n  const [graduationDetails, setGraduationDetails] = useState({\r\n\r\n    gcollegeName: \"\",\r\n\r\n    gboard: \"\",\r\n\r\n    gprogram: \"\",\r\n\r\n    gpercentage: \"\",\r\n\r\n    gyearOfPassing: \"\",\r\n\r\n    gCity: \"\",\r\n\r\n    gState: \"\",\r\n\r\n  });\r\n\r\n  // Skills state\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [experienceDetails, setExperienceDetails] = useState([\r\n    {\r\n      company: \"\",\r\n      position: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    },\r\n  ]);\r\n  \r\n  \r\n\r\n  const [resumeFile, setResumeFile] = useState(null);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const [selectedSkill, setSelectedSkill] = useState(\"\");\r\n\r\n\r\n  const handleExperienceChange = (e, index, field) => {\r\n    const newExperienceDetails = [...experienceDetails];\r\n    newExperienceDetails[index][field] = e.target.value;\r\n    setExperienceDetails(newExperienceDetails);\r\n  };\r\n  const addExperience = () => {\r\n    setExperienceDetails([\r\n      ...experienceDetails,\r\n      { company: \"\", position: \"\", startDate: \"\", endDate: \"\" }\r\n    ]);\r\n  };\r\n  \r\n  \r\n  const handleSkillSelect = (skill) => {\r\n    if (skills.includes(skill)) {\r\n      setSkills(skills.filter((s) => s !== skill));\r\n    } else {\r\n      setSkills([...skills, skill]);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleFileDrop = (e) => {\r\n    e.preventDefault();\r\n    setDragging(false);\r\n    const file = e.dataTransfer.files[0];\r\n    setResumeFile(file);\r\n  };\r\n  \r\n \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Prepare data to be sent\r\n    const userData = {\r\n      basicDetails,\r\n      xClassDetails,\r\n      intermediateDetails,\r\n      graduationDetails,\r\n      skills,\r\n      experienceDetails,\r\n    };\r\n  \r\n    try {\r\n      // Send data to the backend using Fetch API\r\n      const response = await fetch(`${apiUrl}/updateProfile`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json', // Set the Content-Type to JSON\r\n        },\r\n        body: JSON.stringify(userData), // Convert data to JSON format\r\n      });\r\n      if (response.ok) {\r\n        // Data successfully sent to the backend\r\n        console.log('Data sent successfully!');\r\n        setIsProfileUpdated(true);\r\n        window.scrollTo(0, 0); // Scroll to the top of the page\r\n        setTimeout(() => {\r\n          setIsProfileUpdated(false); // Reset the success message after a delay\r\n          window.location.reload(); // Reload the page to clear the form\r\n        }, 100); // Delay for 100 milliseconds\r\n      } else {\r\n        // Handle error case\r\n        console.error('Failed to send data to the backend');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"sidebar\">\r\n       <Sidebar />\r\n      </div>\r\n\r\n     \r\n    <form className=\"profile-form-container\" onSubmit={handleSubmit}>\r\n       <h1>Update your profile</h1>\r\n       {isProfileUpdated && (\r\n        <div className=\"success-message\">\r\n          Profile updated successfully!\r\n        </div>\r\n      )}\r\n      {/* File Upload section */}\r\n      <div className=\"file-upload-container\">\r\n        <p className=\"Details-name\">Upload your resume:</p>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.doc,.docx\"\r\n          onChange={(e) => setResumeFile(e.target.files[0])}\r\n        />\r\n        <div\r\n        className={`file-drop-area ${dragging ? \"dragging\" : \"\"}`}\r\n        onDrop={handleFileDrop}\r\n        onDragOver={(e) => {\r\n          e.preventDefault();\r\n          setDragging(true);\r\n        }}\r\n        onDragLeave={() => setDragging(false)}\r\n      >\r\n        <p className=\"Details-name\">Drag and drop your resume here</p>\r\n      </div>\r\n\r\n      </div>\r\n\r\n\r\n      <p className=\"Details-name\">Basic Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"FirstName\"\r\n\r\n                className=\"firstName\"\r\n\r\n                value={basicDetails.firstName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    firstName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"LastName\"\r\n\r\n                className=\"lastName\"\r\n\r\n                value={basicDetails.lastName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, lastName: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"date\"\r\n\r\n                placeholder=\"DateOfBirth\"\r\n\r\n                className=\"dateofbirth\"\r\n\r\n                value={basicDetails.dateOfBirth}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    dateOfBirth: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Address\"\r\n\r\n                value={basicDetails.address}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, address: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={basicDetails.city}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, city: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={basicDetails.state}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, state: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Pincode\"\r\n\r\n                value={basicDetails.pincode}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({ ...basicDetails, pincode: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Alternate phone number\"\r\n\r\n                value={basicDetails.alternatePhoneNumber}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setBasicDetails({\r\n\r\n                    ...basicDetails,\r\n\r\n                    alternatePhoneNumber: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">X-Class Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"School Name\"\r\n\r\n                value={xClassDetails.xschoolName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    xschoolName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={xClassDetails.xboard}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, xboard: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={xClassDetails.xpercentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    xpercentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of passing\"\r\n\r\n                value={xClassDetails.xyearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    xyearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={xClassDetails.xCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, xCity: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={xClassDetails.xState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({ ...xClassDetails, xState: e.target.value })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Pincode\"\r\n\r\n                value={xClassDetails.xPincode}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setXClassDetails({\r\n\r\n                    ...xClassDetails,\r\n\r\n                    xPincode: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">Intermediate Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Name of college\"\r\n\r\n                value={intermediateDetails.icollegeName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    icollegeName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={intermediateDetails.iboard}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iboard: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Program\"\r\n\r\n                value={intermediateDetails.iprogram}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iprogram: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={intermediateDetails.ipercentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    ipercentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of passing\"\r\n\r\n                value={intermediateDetails.iyearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iyearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"city\"\r\n\r\n                value={intermediateDetails.iCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iCity: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={intermediateDetails.iState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setIntermediateDetails({\r\n\r\n                    ...intermediateDetails,\r\n\r\n                    iState: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n \r\n\r\n      <p className=\"Details-name\">Engineering Details:</p>\r\n\r\n      <table>\r\n\r\n        <tbody>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Name of college\"\r\n\r\n                value={graduationDetails.gcollegeName}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gcollegeName: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Board\"\r\n\r\n                value={graduationDetails.gboard}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gboard: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Program\"\r\n\r\n                value={graduationDetails.gprogram}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gprogram: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Percentage\"\r\n\r\n                value={graduationDetails.gpercentage}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gpercentage: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"Year of Passing\"\r\n\r\n                value={graduationDetails.gyearOfPassing}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gyearOfPassing: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"City\"\r\n\r\n                value={graduationDetails.gCity}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gCity: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          <tr>\r\n\r\n            <td>\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n\r\n                placeholder=\"State\"\r\n\r\n                value={graduationDetails.GState}\r\n\r\n                onChange={(e) =>\r\n\r\n                  setGraduationDetails({\r\n\r\n                    ...graduationDetails,\r\n\r\n                    gState: e.target.value,\r\n\r\n                  })\r\n\r\n                }\r\n\r\n              />\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n     \r\n      <p className=\"Details-name\">Skills:</p>\r\n      <div className=\"skills-buttons\">\r\n  <button\r\n    className={`skill-button ${skills.includes(\"HTML\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"HTML\")}\r\n  >\r\n    HTML\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"CSS\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"CSS\")}\r\n  >\r\n    CSS\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"JavaScript\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"JavaScript\")}\r\n  >\r\n    JavaScript\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Java\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Java\")}\r\n  >\r\n    Java\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Python\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Python\")}\r\n  >\r\n    Python\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"React\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"React\")}\r\n  >\r\n    React\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"SQL\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"SQL\")}\r\n  >\r\n    SQL\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"MongoDB\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"MongoDB\")}\r\n  >\r\n    MongoDB\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"MySQL\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"MySQL\")}\r\n  >\r\n    MySQL\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Bootstrap\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Bootstrap\")}\r\n  >\r\n    Bootstrap\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Vue.js\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Vue.js\")}\r\n  >\r\n    Vue.js\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Angular\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Angular\")}\r\n  >\r\n    Angular\r\n  </button>\r\n  <button\r\n    className={`skill-button ${skills.includes(\"Flutter\") ? \"active\" : \"\"}`} type=\"button\"\r\n    onClick={() => handleSkillSelect(\"Flutter\")}\r\n  >\r\n    Flutter\r\n  </button>\r\n</div>\r\n\r\n {/* ...Previous Code... */}\r\n\r\n<p className=\"Details-name\">Experience Details:</p>\r\n\r\n{experienceDetails.map((experience, index) => (\r\n  <table key={index} className=\"experience-table\">\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            value={experience.company}\r\n            onChange={(e) => handleExperienceChange(e, index, \"company\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Position\"\r\n            value={experience.position}\r\n            onChange={(e) => handleExperienceChange(e, index, \"position\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Start Date\"\r\n            value={experience.startDate}\r\n            onChange={(e) => handleExperienceChange(e, index, \"startDate\")}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"End Date\"\r\n            value={experience.endDate}\r\n            onChange={(e) => handleExperienceChange(e, index, \"endDate\")}\r\n          />\r\n        </td>\r\n        <td>\r\n        <button type=\"button\" onClick={addExperience}>Add Experience</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n   \r\n  </table>\r\n  \r\n))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n    \r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\n \r\n\r\nexport default Profile;","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\JobDescription.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\EmployerLogin.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserTable.js",[],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\OTPVerification.js",["133"],[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\Sidebar.js",["134","135"],[],"import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../css/Sidebar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faSearch, faFileAlt, faHeart, faBell, faClipboard } from '@fortawesome/free-solid-svg-icons'; // Import other icons as needed\r\nimport avatar from '../images/avatar.jpg'\r\nimport { useUserContext } from './UserProvider';\r\n\r\nconst Sidebar = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { user } = useUserContext();\r\n  const handleUpdateProfileClick = () => {\r\n    // Navigate to the profile page\r\n    navigate('/profile');\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n    <div className=\"sidebar-top\">\r\n      <div className=\"avatar-container\">\r\n        <img src={avatar} alt=\"Avatar\" className=\"avatar\" />\r\n      </div>\r\n      <div className=\"user-name\">{user ? user.name : 'Guest'}</div>\r\n      <div className=\"user-email\">{user ? user.email : 'Guest@gmail.com'}</div>\r\n      <button className=\"update-profile-button\" onClick={handleUpdateProfileClick}>\r\n        Update Profile\r\n      </button>\r\n      </div>\r\n      <ul>\r\n        <li><FontAwesomeIcon icon={faSearch} />Find Jobs</li>\r\n        <li><FontAwesomeIcon icon={faFileAlt} />Jobs Applied</li>\r\n        <li><FontAwesomeIcon icon={faHeart} />Saved Jobs</li>\r\n        <li><FontAwesomeIcon icon={faBell} />Alerts</li>\r\n        <li><FontAwesomeIcon icon={faClipboard} />My Resume</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",[],"C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\JobCard.js",["136","137","138"],[],"import React from 'react';\r\nimport '../css/JobCard.css'; // Import your CSS file\r\nimport Location from '../images/Location.png'\r\nimport Company from '../images/Company.png'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\n \r\n\r\nimport LocationOnOutlinedIcon from \"@mui/icons-material/LocationOnOutlined\";\r\n\r\nconst JobCard = ({ job }) => {\r\n\r\n  const navigate = useNavigate();\r\n  const handleViewJob = () => {\r\n    // Navigate to the job description page\r\n    navigate(`/job/${job.id}`); // Use the appropriate URL based on your routes\r\n  };\r\n  return (\r\n    <Card sx={{ width: 505, height: 244 }}>\r\n    <CardContent\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              paddingRight: \"24px\"\r\n            }}\r\n    >\r\n    <Stack spacing={2}>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Full Stack Java Developer\r\n    </Typography>\r\n    <Stack direction=\"row\" spacing={1}>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  NSEIT\r\n    </Typography>\r\n    <Divider orientation=\"vertical\" flexItem />\r\n    <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n    <LocationOnOutlinedIcon fontSize=\"small\" />\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Mumbai\r\n    </Typography>\r\n    </Stack>\r\n    </Stack>\r\n    <Stack direction=\"row\" spacing={6}>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  ₹3.5 - 10 LPA\r\n    </Typography>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  4 - 6yrs\r\n    </Typography>\r\n    </Stack>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Posted on 24 JUL 2023\r\n    </Typography>\r\n    </Stack>\r\n    <img\r\n              src=\"/assets/1.jpg\"\r\n              alt=\"company name\"\r\n              height=\"64px\"\r\n              width=\"64px\"\r\n            />\r\n    </CardContent>\r\n    <Stack\r\n            direction=\"row\"\r\n            spacing={36}\r\n            sx={{ marginBottom: \"12px\", paddingRight: \"24px\" }}\r\n    >\r\n    <Button>View Job</Button>\r\n    <Button>Save Job</Button>\r\n    </Stack>\r\n    </Card>\r\n      );\r\n};\r\n\r\nexport default JobCard;\r\n","C:\\Users\\Madar\\Desktop\\TalentTrackerFrontEnd\\src\\components\\UserProvider.js",[],[],{"ruleId":"139","severity":1,"message":"140","line":18,"column":10,"nodeType":"141","messageId":"142","endLine":18,"endColumn":29},{"ruleId":"139","severity":1,"message":"143","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":22},{"ruleId":"139","severity":1,"message":"144","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":20},{"ruleId":"139","severity":1,"message":"145","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":25},{"ruleId":"139","severity":1,"message":"146","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":20,"column":10,"nodeType":"141","messageId":"142","endLine":20,"endColumn":29},{"ruleId":"139","severity":1,"message":"145","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":25},{"ruleId":"139","severity":1,"message":"147","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"148","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":16},{"ruleId":"139","severity":1,"message":"146","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":21},{"ruleId":"139","severity":1,"message":"149","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":22},{"ruleId":"139","severity":1,"message":"150","line":9,"column":10,"nodeType":"141","messageId":"142","endLine":9,"endColumn":22},{"ruleId":"139","severity":1,"message":"151","line":10,"column":9,"nodeType":"141","messageId":"142","endLine":10,"endColumn":17},{"ruleId":"139","severity":1,"message":"152","line":107,"column":10,"nodeType":"141","messageId":"142","endLine":107,"endColumn":20},{"ruleId":"139","severity":1,"message":"153","line":110,"column":10,"nodeType":"141","messageId":"142","endLine":110,"endColumn":23},{"ruleId":"139","severity":1,"message":"154","line":110,"column":25,"nodeType":"141","messageId":"142","endLine":110,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":28,"column":6,"nodeType":"157","endLine":28,"endColumn":19,"suggestions":"158"},{"ruleId":"139","severity":1,"message":"159","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"160","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":16},{"ruleId":"139","severity":1,"message":"161","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":15},{"ruleId":"139","severity":1,"message":"162","line":23,"column":9,"nodeType":"141","messageId":"142","endLine":23,"endColumn":22},"no-unused-vars","'registrationSuccess' is assigned a value but never used.","Identifier","unusedVar","'ForgotPassword' is defined but never used.","'faUserPlus' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSignInAlt' is defined but never used.","'faUser' is defined but never used.","'faHome' is defined but never used.","'faSignOutAlt' is defined but never used.","'faUserCircle' is defined but never used.","'navigate' is assigned a value but never used.","'resumeFile' is assigned a value but never used.","'selectedSkill' is assigned a value but never used.","'setSelectedSkill' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setOTPVerifyingInProgress'. Either include it or remove the dependency array. If 'setOTPVerifyingInProgress' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["163"],"'Link' is defined but never used.","'Location' is defined but never used.","'Company' is defined but never used.","'handleViewJob' is assigned a value but never used.",{"desc":"164","fix":"165"},"Update the dependencies array to be: [otpVerified, setOTPVerifyingInProgress]",{"range":"166","text":"167"},[1129,1142],"[otpVerified, setOTPVerifyingInProgress]"]